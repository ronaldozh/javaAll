
qinhuhy zh871022
-------------------------------------------------------------------------------------------
廖雪峰git入门教程
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013743858312764dca7ad6d0754f76aa562e3789478044000
-------------------------------------------------------------------------------------------
------------
	-----安装git
	E:\Git
-1-------创建本地ssh
 $ ssh-keygen -t rsa -C "947213515@qq.com"
 然后连续点击三下生成无密码的ssh，生成文件的路径为 C:\Users\zh\.ssh，此文件夹下有两个文件，复制id_rsa.pub中的所有内容到github的ssh中
0.-------查看ssh是否已连接到github
 $ ssh -T git@github.com
1.-------配置本地账户密码
 $ git config --global user.name "ronaldozh"
 $ git config --global user.email "947213515@qq.com" 
2.-------添加远程地址（javaAll在github上是已经创建的仓库，origin只是一个变量）
 2.1添加： git remote add origin git@github.com:ronaldozh/javaAll.git
 2.2查看当前的远程库：remote:git remote -v
 2.3删除：git remote rm origin
3.-------将本地文件提交到github中（及删除github上的文件）
 3.1 先手动建立一个空文件emptyFile夹或者（mkdir yafeng）
 3.2 手动进入空文件或者（cd emptyFile/）
 3.3 手动查看文件夹内容或者（ls）,初始化为git仓库：git init
 3.4 克隆github上的仓库到本地仓库：git clone git@github.com/ronaldozh/javaAll.git
 3.5 修改clone下来的项目，然后在修改目录当前
 	3.5.1 git add a.html-------添加当前目录下的文件（需写后缀）及文件夹,
 	3.5.2 git add * git会自动把你当前目录所有修改过的文件添加
 	3.5.3 git add . git会递归地将你执行命令时所在的目录中的所有文件添加上去，所以如果你将当前的工作目录作为参数，它就会追踪那儿的所有文	
    	3.5.4 git rm 文件夹名（文件名不需要-r） -r -------删除文件夹（-r为循环文件夹，本地仓库删除）
		3.5.4.1 git rm –r 进入某个目录中，执行此语句，会删除该目录下的所有文件和子目录
 3.6 git commit -m "first commit"-------添加文件提交到本地仓库（双引号为此次提交的说明）
 3.7 git push -u origin master-------提交此次添加的文件到github(必须是本地已提交的)
 	3.7.1 -u说明：将本地的master分支推送到origin主机，同时指定origin为默认主机，后面就可以不加任何参数，直接使用git push origin master了
 3.8 在提交前先更新一下：git pull（此git pull无论在本地仓库文件夹的任何地方更新的都是整个仓库，例如只要进入本地javaAll更新即可）
 PS:（1）时光穿梭机：退回版本：git reset --hard HEAD^，上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100
    （2）去指定版本：git reflog后最左边的号，git reset --hard 3628164，这样就返回到相应的版本号了
    （3）git checkout（git checkout -- file命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令）与git reset HEAD
    	（3.1）场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
	（3.2）场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
	（3.3）场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考PS中的（1）（2）去指定版本，不过前提是没有推送到远程库。
    （4）每一次操作后可执行git status后，git会给出下一步的提示
    
------------------------------------------------------------------------------------
	-------查看状态
	git status -- readme.txt
	-------
	-------查看工作区和版本库里面最新版本的区别：
	git diff HEAD -- readme.txt
	-------把readme.txt文件在工作区的修改全部撤销
	git checkout -- readme.txt
	-------从github上更新数据
	git pull
	-------github与本地仓库进行合并
	git merge origin/master
	
----Git错误non-fast-forward后的冲突解决 ----------------------
https://my.oschina.net/uniquejava/blog/165140
	$ git fetch   $ git merge   这2句命令等价于$ git pull
---------------------------------------------------------------
-----myeclipse上传出现cannot open Git-receive-pack错误时--------------------------
http://blog.csdn.net/haizhu668/article/details/17347577
-------------------------------------------------------------
---将本地仓库变成远程仓库
http://blog.csdn.net/wangjia55/article/details/8802490
	
------------------------------------------------------------------------------------
http://www.mamicode.com/info-detail-928508.html	(在MyEclipse（2015）中上传项目到github的步骤)(注意:myeclipse内的提交时提交和更新都是操作本地库，还需要从git上进行commit与pull)
1.导入方法（不是唯一），首先将ssh加入到github中，用myeclipse进行下载（import），下载后，删除myeclipse的项目(因为有仓库名),但不要选择从磁盘上删除，然后再impot 从导入的库中选择相应的项目

提交文件前需要pull,如果文件有冲突，则会提示提交文件冲突，此时提交冲突文件（只需commit无需commit and push）,然后再pull,则冲突文件会有红色标记，手动点开文件修改，然后进入冲突文件team、add to index ,然后再commit and push
------------------------------------------------------------------------------------
        -------从github上下载项目
	--首先，进入要下载的项目，并单击fork。
	--然后执行
	git clone git@github.com/ronaldozh/Hello-World.git(目前可以直接取github上的下载地址，然后在git上进行此操作)
	--如果在github的remote上已经有了文件,此时应当先pull一下
	git pull origin master
	--为了保持代码的同步，可以进入目录，执行如下的操作：
	git remote add upstream git@github.com/username/JavaDemo.git
	--删除远远程仓库
	git push origin:{远程分支名}意思是将本地空分支推送到远程分支，相当于删除远程分支


---------------------------------------------------github的操作-----------------------------------------
删除一个仓库  http://www.cnblogs.com/forget406/p/6045213.html

-------------------------------------------------------------myeclipse的github操作------------------
http://www.cnblogs.com/fdzfd/p/6970978.html
http://www.cnblogs.com/vinphy/p/5289708.html
		
